# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    - name: chmod excutable for gradlew file
      run: chmod +x ./gradlew    
    - name: Build with Gradle Wrapper
      run: ./gradlew build
    - name: Upload Artifact for deployment
      uses: actions/upload-artifact@v2
      with:
        name: springaj
        path: build/libs/*.jar
  
  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
  
  deploy:  
    permissions:
      contents: none
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: springaj
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with: 
        ssh-private-key: ${{ secrets.GCP_DEMO_PRIVATE_KEY }}
    - name: SCP jar file to server
      env:
        USERNAME: ${{ secrets.USERNAME }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
      run: scp *.jar $USERNAME@$SERVER_IP:~/cicd
    - name: Excute remote commands
      run: |
        ssh ${{ USERNAME }}@${{ secrets.SERVER_IP }} "sudo fuser -k 8080/tcp"
        ssh ${{ USERNAME }}@${{ secrets.SERVER_IP }} "sudo nohup java -jar ~/cicd/*.jar &"
